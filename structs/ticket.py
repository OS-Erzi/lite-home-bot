import asyncio
import os

from discord import Interaction, Member, ButtonStyle, Embed, File
from discord.ui import View, Item, Button, button
from discord.ext import commands
from datetime import datetime

from core import settings
from logger import loguru_log

class TicketAction(View):
    def __init__(self):
        super().__init__(timeout=None)
        self.ticket_handler = None

        self.accepting_button = Button(label="", emoji=settings.emoji.ACCEPT_TICKET, custom_id="accepting")
        self.accepting_button.callback = self.accept_callback
        self.add_item(self.accepting_button)

        self.close_button = Button(label="", emoji=settings.emoji.CLOSE_TICKET, custom_id="close", style=ButtonStyle.danger)
        self.close_button.callback = self.close_callback
        self.add_item(self.close_button)
        
    async def save_history(self, interaction: Interaction):
        timestamp = datetime.now().strftime('%Y%m%d%H%M%S')
        channel_id = interaction.channel.id
        
        # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é logger/logs/, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        log_dir = os.path.join("logger", "tickets")
        os.makedirs(log_dir, exist_ok=True)

        # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–º—è —Ñ–∞–π–ª–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º channel_id
        filename = os.path.join(log_dir, f"–ë–∏–ª–µ—Ç-{channel_id}.txt")

        messages = await interaction.channel.history(limit=500).flatten()
        messages.reverse()
        try:
            with open(filename, "w", encoding="utf-8") as file:
                for message in messages:
                    file.write(
                        f"{message.created_at.strftime('%Y-%m-%d %H:%M:%S')} - {message.author.display_name}: {message.clean_content}\n")
        except Exception as e:
            loguru_log.error(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–∏–Ω—è –ª–æ–≥–æ–≤ –±–∏–ª–µ—Ç–∞. {e}")
        finally:
            log_channel = interaction.guild.get_channel_or_thread(1215690462162194452)
            if log_channel:
                with open(filename, "rb") as file:
                    await log_channel.send(f"–ë–∏–ª–µ—Ç - {interaction.channel.name} –±—ã–ª –∑–∞–∫—Ä—ã—Ç",
                                        file=File(file, f"{channel_id}.txt"))
            else:
                loguru_log.error("–ö–∞–Ω–∞–ª –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–µ —É–∫–∞–∑–∞–Ω, –¥–∞–Ω–Ω—ã–µ –ø–æ—Ç–µ—Ä—è–Ω—ã.")

    def check_perm_roles(self, member: Member) -> bool:
        if not member.guild_permissions.administrator and not any(
            role.id in settings.bot.LIST_ROLE_SUPPORT_FOR_TICKET for role in member.roles
            ):
            return True
        return False

    async def accept_callback(self, interaction: Interaction):
        await interaction.response.defer()
        if self.check_perm_roles(interaction.user):
            raise commands.BadArgument('NotModer')
        self.accepting_button.disabled = True
        await interaction.message.channel.edit(name=interaction.message.channel.name.replace('üü†', 'üü¢'))
        await interaction.message.channel.set_permissions(interaction.user, read_messages=True, send_messages=True)
        await interaction.followup.send(f'{interaction.user.mention} –ø—Ä–∏–Ω—è–ª –≤–∞—à –±–∏–ª–µ—Ç')
        await interaction.edit_original_response(view=self)

    async def close_callback(self, interaction: Interaction):
        await interaction.response.defer()
        channel_permissions = interaction.message.channel.permissions_for(interaction.user)
        if not (channel_permissions.read_messages and channel_permissions.send_messages):
            await interaction.followup.send('–≠—Ç–æ –Ω–µ –≤–∞—à —Ç–∏–∫–µ—Ç.', ephemeral=True)
            return

        self.disable_all_items()
        await interaction.edit_original_response(view=self)
        await interaction.message.channel.edit(name=interaction.message.channel.name.replace('üü¢', 'üî¥').replace('üü†', 'üî¥'))
        await interaction.followup.send(f'{interaction.user.mention} —É—Å–ø–µ—à–Ω–æ –∑–∞–∫—Ä—ã–ª –±–∏–ª–µ—Ç –æ–±—Ä–∞—â–µ–Ω–∏—è.')
        await asyncio.sleep(5)
        await interaction.message.channel.edit(sync_permissions=True)
        await self.save_history(interaction=interaction)
        await interaction.message.channel.delete(reason='–ó–∞–∫—Ä—ã—Ç–∏–µ –±–∏–ª–µ—Ç–∞')

    async def on_error(
            self, error: Exception, item: Item, interaction: Interaction
    ):
        if isinstance(error, commands.BadArgument) and error.args[0] == 'NotStaff':
            e = Embed(color=settings.color.MAIN, description='–î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –≤–∞–º –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞')
            await interaction.followup.send(embed=e, ephemeral=True)
        elif isinstance(error, commands.BadArgument) and error.args[0] == 'NotRank':
            e = Embed(color=settings.color.MAIN, description='–í–∞—à —Ä–∞–Ω–≥ –Ω–µ –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ–≤–µ—Ä—à–∏—Ç—å –¥–∞–Ω–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ')
            await interaction.followup.send(embed=e, ephemeral=True)
        elif isinstance(error, commands.BadArgument) and error.args[0] == 'NotModer':
            e = Embed(color=settings.color.MAIN, description='–î–∞–Ω–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ –¥–æ—Å—Ç–ø—É–Ω–æ –¥–ª—è –≤–∞—à–µ–≥–æ —Ä–∞–Ω–≥–∞.')
            await interaction.followup.send(embed=e, ephemeral=True)
        else:
            print(error)

class Ticket(View):
    def __init__(self):
        super().__init__(timeout=None)

    @button(label='–ü–æ–¥–∞—Ç—å –±–∏–ª–µ—Ç –æ–±—Ä–∞—â–µ–Ω–∏—è', emoji='<:ticket:1216008704877531146>', custom_id='ticket', style=ButtonStyle.secondary)
    async def ticket_button(self, button: Button, interaction: Interaction):
        await interaction.response.defer()
        category = interaction.guild.get_channel(settings.ids.TICKET_CATEGORY)

        if category is None:
            await interaction.followup.send('–ü—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –±–∏–ª–µ—Ç–∞ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.', ephemeral=True)
            return

        try:
            ticket_channel = await interaction.guild.create_text_channel(name=f'„Éªüü†„Éª{interaction.user.display_name}', category=category)
            await ticket_channel.set_permissions(interaction.user, read_messages=True, send_messages=True)
        except Exception as e:
            loguru_log.error("–ë–æ—Ç –Ω–µ —Å–º–æ–≥ —Å–æ–∑–¥–∞—Ç—å –∫–∞–Ω–∞–ª –≤ –∑–∞–¥–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.")
        finally:
            embed = Embed(
                color=settings.color.MAIN, 
                description='**–ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.**\n**–ß—Ç–æ–±—ã –∑–∞–∫—Ä—ã—Ç—å —ç—Ç–æ—Ç –∑–∞–ø—Ä–æ—Å, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.**'
            )
            await ticket_channel.send(content=interaction.user.mention, embed=embed, view=TicketAction())